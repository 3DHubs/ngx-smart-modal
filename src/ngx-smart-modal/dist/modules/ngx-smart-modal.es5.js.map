{"version":3,"file":"ngx-smart-modal.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/ngx-smart-modal.ts","../../src/modules/ngx-smart-modal.module.ts","../../src/components/ngx-smart-modal.component.ts","../../src/services/ngx-smart-modal.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxSmartModalService,NgxSmartModalComponent,NgxSmartModalModule} from './public_api';\n","/**\n * Entry point for all public APIs of the package.\n */\nexport {NgxSmartModalService,NgxSmartModalComponent,NgxSmartModalModule} from './src/ngx-smart-modal';\n","// Public classes.\nexport {NgxSmartModalService} from './services/ngx-smart-modal.service';\nexport {NgxSmartModalComponent} from './components/ngx-smart-modal.component';\nexport {NgxSmartModalModule} from './modules/ngx-smart-modal.module';\n","import {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, ModuleWithProviders} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgxSmartModalService} from '../services/ngx-smart-modal.service';\nimport {NgxSmartModalComponent} from '../components/ngx-smart-modal.component';\nexport class NgxSmartModalModule {\n/**\n * Use in AppModule: new instance of NgxSmartModal.\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [NgxSmartModalService]\n        };\n    }\n/**\n * Use in features modules with lazy loading: new instance of NgxSmartModal.\n * @return {?}\n */\npublic static forChild(): ModuleWithProviders {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [NgxSmartModalService]\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [NgxSmartModalComponent],\n    exports: [NgxSmartModalComponent],\n    imports: [CommonModule, BrowserModule, BrowserAnimationsModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxSmartModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostListener} from '@angular/core';\nimport {trigger, style, animate, transition} from '@angular/animations';\nimport {NgxSmartModalService} from '../services/ngx-smart-modal.service';\nexport class NgxSmartModalComponent implements OnInit, OnDestroy {\npublic closable: boolean = true;\npublic escapeAble: boolean = true;\npublic identifier: string;\npublic customClass: string = '';\npublic visible: boolean = false;\npublic backdrop: boolean = true;\npublic force: boolean = true;\npublic visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\npublic onClose: EventEmitter<any> = new EventEmitter();\npublic onDismiss: EventEmitter<any> = new EventEmitter();\npublic onOpen: EventEmitter<any> = new EventEmitter();\npublic onEscape: EventEmitter<any> = new EventEmitter();\npublic layerPosition: number = 1041;\npublic overlayVisible: boolean = false;\n/**\n * @param {?} ngxSmartModalService\n */\nconstructor(private ngxSmartModalService: NgxSmartModalService) {\n  }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    this.layerPosition += this.ngxSmartModalService.getModalStackCount();\n    this.ngxSmartModalService.addModal({id: this.identifier, modal: this}, this.force);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy() {\n    this.ngxSmartModalService.removeModal(this.identifier);\n  }\n/**\n * @param {?=} top\n * @return {?}\n */\npublic open(top?: boolean): void {\n    if (top) {\n      this.layerPosition = this.ngxSmartModalService.getHigherIndex();\n    }\n    if (!document.body.classList.contains('dialog-open')) {\n      document.body.classList.add('dialog-open');\n    }\n    this.overlayVisible = true;\n    this.visible = true;\n    this.onOpen.emit(this);\n  }\n/**\n * @return {?}\n */\npublic close(): void {\n    const /** @type {?} */ me = this;\n    this.visible = false;\n    this.visibleChange.emit(this.visible);\n    this.onClose.emit(this);\n    if (document.body.classList.contains('dialog-open')) {\n      document.body.classList.remove('dialog-open');\n    }\n    setTimeout(() => {\n      me.overlayVisible = false;\n    }, 150);\n  }\n/**\n * @param {?} e\n * @return {?}\n */\npublic dismiss(e: any): void {\n    const /** @type {?} */ me = this;\n    if (e.target.classList.contains('overlay')) {\n      this.visible = false;\n      this.visibleChange.emit(this.visible);\n      this.onDismiss.emit(this);\n      setTimeout(() => {\n        me.overlayVisible = false;\n      }, 150);\n    }\n  }\n/**\n * @param {?} className\n * @return {?}\n */\npublic addCustomClass(className: string): void {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n  }\n/**\n * @param {?=} className\n * @return {?}\n */\npublic removeCustomClass(className?: string): void {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n  }\n/**\n * @return {?}\n */\npublic isVisible(): boolean {\n    return this.visible;\n  }\n/**\n * @return {?}\n */\npublic hasData(): boolean {\n    return !!this.ngxSmartModalService.getModalData(this.identifier);\n  }\n/**\n * @param {?} data\n * @return {?}\n */\npublic setData(data: object | any[] | number | string | boolean): boolean {\n    return this.ngxSmartModalService.setModalData(data, this.identifier);\n  }\n/**\n * @return {?}\n */\npublic getData(): object | any[] | number | string | boolean {\n    return this.ngxSmartModalService.getModalData(this.identifier);\n  }\n/**\n * @return {?}\n */\npublic removeData(): void {\n    return this.ngxSmartModalService.resetModalData(this.identifier);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate escapeKeyboardEvent(event: KeyboardEvent) {\n    if (this.escapeAble) {\n      const /** @type {?} */ x = event.keyCode;\n      if (x === 27) {\n        this.onEscape.emit(this);\n        this.ngxSmartModalService.closeLatestModal();\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  animations: [\n    trigger('dialog', [\n      transition('void => *', [\n        style({transform: 'scale3d(.3, .3, .3)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'scale3d(.0, .0, .0)'}))\n      ])\n    ])\n  ],\n  selector: 'ngx-smart-modal',\n  template: `\n    <style>\n      .overlay {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        overflow-y: auto;\n        background-color: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n      }\n\n      .overlay.transparent {\n        background-color: transparent;\n      }\n\n      body.dialog-open {\n        overflow: hidden;\n      }\n\n      .dialog {\n        visibility: visible;\n        position: absolute;\n        border-radius: 2px;\n        right: 0;\n        left: 0;\n        top: 20px;\n        margin-bottom: 20px;\n        margin-right: auto;\n        margin-left: auto;\n        min-height: 200px;\n        width: 90%;\n        max-width: 520px;\n        background-color: #fff;\n        padding: 12px;\n        box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);\n      }\n\n      @media (min-width: 768px) {\n        .dialog {\n          top: 40px;\n          margin-bottom: 40px;\n        }\n      }\n\n      .dialog__close-btn {\n        border: 0;\n        background: none;\n        color: #2d2d2d;\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        font-size: 1.2em;\n      }\n\n      .dialog__close-btn:hover {\n        cursor: pointer;\n      }\n    </style>\n    <div *ngIf=\"overlayVisible\" class=\"overlay\" [style.z-index]=\"layerPosition-1\"\n         [ngClass]=\"{'transparent':!backdrop}\"\n         (click)=\"dismiss($event)\">\n      <div [@dialog] *ngIf=\"visible\" [style.z-index]=\"layerPosition\" class=\"dialog\" [ngClass]=\"customClass\">\n        <ng-content></ng-content>\n        <button *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"dialog__close-btn\">\n          <img\n            src=\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjE2cHgiIGhlaWdodD0iMTZweCI+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTUwNS45NDMsNi4wNThjLTguMDc3LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDksMEw2LjA1OCw0NzYuNjkzYy04LjA3Nyw4LjA3Ny04LjA3NywyMS4xNzIsMCwyOS4yNDkgICAgQzEwLjA5Niw1MDkuOTgyLDE1LjM5LDUxMiwyMC42ODMsNTEyYzUuMjkzLDAsMTAuNTg2LTIuMDE5LDE0LjYyNS02LjA1OUw1MDUuOTQzLDM1LjMwNiAgICBDNTE0LjAxOSwyNy4yMyw1MTQuMDE5LDE0LjEzNSw1MDUuOTQzLDYuMDU4eiIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTUwNS45NDIsNDc2LjY5NEwzNS4zMDYsNi4wNTljLTguMDc2LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDgsMGMtOC4wNzcsOC4wNzYtOC4wNzcsMjEuMTcxLDAsMjkuMjQ4bDQ3MC42MzYsNDcwLjYzNiAgICBjNC4wMzgsNC4wMzksOS4zMzIsNi4wNTgsMTQuNjI1LDYuMDU4YzUuMjkzLDAsMTAuNTg3LTIuMDE5LDE0LjYyNC02LjA1N0M1MTQuMDE4LDQ5Ny44NjYsNTE0LjAxOCw0ODQuNzcxLDUwNS45NDIsNDc2LjY5NHoiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K\" />\n        </button>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxSmartModalService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closable': [{ type: Input },],\n'escapeAble': [{ type: Input },],\n'identifier': [{ type: Input },],\n'customClass': [{ type: Input },],\n'visible': [{ type: Input },],\n'backdrop': [{ type: Input },],\n'force': [{ type: Input },],\n'visibleChange': [{ type: Output },],\n'onClose': [{ type: Output },],\n'onDismiss': [{ type: Output },],\n'onOpen': [{ type: Output },],\n'onEscape': [{ type: Output },],\n'escapeKeyboardEvent': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction NgxSmartModalComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalComponent.ctorParameters;\n/** @type {?} */\nNgxSmartModalComponent.propDecorators;\n/** @type {?} */\nNgxSmartModalComponent.prototype.closable;\n/** @type {?} */\nNgxSmartModalComponent.prototype.escapeAble;\n/** @type {?} */\nNgxSmartModalComponent.prototype.identifier;\n/** @type {?} */\nNgxSmartModalComponent.prototype.customClass;\n/** @type {?} */\nNgxSmartModalComponent.prototype.visible;\n/** @type {?} */\nNgxSmartModalComponent.prototype.backdrop;\n/** @type {?} */\nNgxSmartModalComponent.prototype.force;\n/** @type {?} */\nNgxSmartModalComponent.prototype.visibleChange;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onClose;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onDismiss;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onOpen;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onEscape;\n/** @type {?} */\nNgxSmartModalComponent.prototype.layerPosition;\n/** @type {?} */\nNgxSmartModalComponent.prototype.overlayVisible;\n/** @type {?} */\nNgxSmartModalComponent.prototype.ngxSmartModalService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {NgxSmartModalComponent} from '../components/ngx-smart-modal.component';\nimport {ModalInstance} from './modal-instance';\nexport class NgxSmartModalService {\npublic modalStack: ModalInstance[] = [];\npublic modalData: any[] = [];\nprivate debouncer: any;\n/**\n * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n * \n * @param {?} modalInstance\n * @param {?=} force\n * @return {?}\n */\npublic addModal(modalInstance: ModalInstance, force?: boolean): void {\n        if (force) {\n            const /** @type {?} */ i: number = this.modalStack.findIndex((o: ModalInstance) => {\n                return o.id === modalInstance.id;\n            });\n            if (i > -1) {\n                this.modalStack[i].modal = modalInstance.modal;\n            } else {\n                this.modalStack.push(modalInstance);\n            }\n            return;\n        }\n        this.modalStack.push(modalInstance);\n    }\n/**\n * Retrieve a modal instance by its identifier.\n * \n * @param {?} id\n * @return {?}\n */\npublic getModal(id: string): NgxSmartModalComponent {\n        return this.modalStack.filter((o: any) => {\n            return o.id === id;\n        })[0].modal;\n    }\n/**\n * Retrieve all the created modals.\n * \n * @return {?}\n */\npublic getModalStack(): ModalInstance[] {\n        return this.modalStack;\n    }\n/**\n * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n * \n * @return {?}\n */\npublic getOpenedModals(): ModalInstance[] {\n        const /** @type {?} */ modals: ModalInstance[] = [];\n        this.modalStack.forEach((o: ModalInstance) => {\n            if (o.modal.visible) {\n                modals.push(o);\n            }\n        });\n        return modals;\n    }\n/**\n * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n * Use it to make a modal appear foreground.\n * \n * @return {?}\n */\npublic getHigherIndex(): number {\n        const /** @type {?} */ index: number[] = [];\n        const /** @type {?} */ modals: ModalInstance[] = this.getOpenedModals();\n        modals.forEach((o: ModalInstance) => {\n            index.push(o.modal.layerPosition);\n        });\n        return Math.max(...index) + 1;\n    }\n/**\n * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n * \n * @return {?}\n */\npublic getModalStackCount(): number {\n        return this.modalStack.length;\n    }\n/**\n * Remove a modal instance from the modal stack.\n * \n * @param {?} id\n * @return {?}\n */\npublic removeModal(id: string): void {\n        const /** @type {?} */ i: number = this.modalStack.findIndex((o: any) => {\n            return o.id === id;\n        });\n        if (i > -1) {\n            this.modalStack.splice(i, 1);\n        }\n    }\n/**\n * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n * as method output.\n * \n * @param {?} data\n * @param {?} id\n * @return {?}\n */\npublic setModalData(data: object | any[] | number | string | boolean, id: string): boolean {\n        if (!!this.modalStack.find((o: ModalInstance) => {\n                return o.id === id;\n            })) {\n            if (!!this.modalData.find((o) => {\n                    return o.id === id;\n                })) {\n                setTimeout(() => this.modalData[this.modalData.findIndex((o) => o.id === id)].data = data);\n            } else {\n                setTimeout(() => this.modalData.push({data, id}));\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n/**\n * Retrieve modal data by its identifier.\n * \n * @param {?} id\n * @return {?}\n */\npublic getModalData(id: string): object | any[] | number | string | boolean {\n        return this.modalData.filter((o: any) => o.id === id);\n    }\n/**\n * Retrieve all data associated to any modal.\n * \n * @return {?}\n */\npublic getAllModalData(): any[] {\n        return this.modalData;\n    }\n/**\n * Reset the data attached to a given modal.\n * \n * @param {?} id\n * @return {?}\n */\npublic resetModalData(id: string): void {\n        const /** @type {?} */ i: number = this.modalData.findIndex((o: any) => {\n            return o.id === id;\n        });\n        if (i > -1) {\n            this.modalData.splice(i, 1);\n        }\n    }\n/**\n * Reset all the modal data.\n * Use it wisely.\n * @return {?}\n */\npublic resetAllModalData(): void {\n        this.modalData = [];\n    }\n/**\n * Close the latest opened modal if it has been declared as escapeAble\n * Using a debounce system because one or more modals could be listening\n * escape key press event.\n * @return {?}\n */\npublic closeLatestModal(): void {\n        const /** @type {?} */ me = this;\n        clearTimeout(this.debouncer);\n        this.debouncer = setTimeout(() => {\n            let /** @type {?} */ tmp: ModalInstance | undefined;\n            me.getOpenedModals().forEach((m: ModalInstance) => {\n                if (m.modal.layerPosition > (!!tmp ? tmp.modal.layerPosition : 0 && m.modal.escapeAble)) {\n                    tmp = m;\n                }\n            });\n            return !!tmp ? tmp.modal.close() : false;\n        }, 100);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxSmartModalService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalService.ctorParameters;\n/** @type {?} */\nNgxSmartModalService.prototype.modalStack;\n/** @type {?} */\nNgxSmartModalService.prototype.modalData;\n/** @type {?} */\nNgxSmartModalService.prototype.debouncer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}